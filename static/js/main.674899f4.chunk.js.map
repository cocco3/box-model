{"version":3,"sources":["useThemeStyles.js","Components/Box/styles.js","Components/Box/Box.js","Components/Checkbox/Checkbox.js","Components/Fieldset/styles.js","Components/Fieldset/Fieldset.js","Components/InputNumber/styles.js","Components/InputNumber/InputNumber.js","Components/InputRange/InputRange.js","Components/InputText/styles.js","Components/InputText/InputText.js","useInputChange.js","App.js","serviceWorker.js","index.js"],"names":["useThemeStyles","styles","useTheme","theme","outer","backgroundColor","colors","margin","inner","alignItems","padding","border","display","content","height","marginLeft","position","zIndex","borderLeft","paddingLeft","background","top","width","left","bottom","flexDirection","marginTop","borderTop","paddingTop","right","Box","borderRight","borderBottom","marginRight","marginBottom","paddingRight","paddingBottom","minHeight","maxHeight","minWidth","maxWidth","fontSize","lineHeight","text","baseStyles","BoxRef","useRef","useState","offsetHeight","setOffsetHeight","useEffect","current","offsetWidth","setOffsetWidth","inlineStylesInner","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","HeightNode","css","style","WidthNode","ref","defaultProps","Checkbox","fieldset","grid","gridTemplateColumns","gridGap","gridAutoFlow","Fieldset","children","legend","LegendNode","input","InputNumber","label","max","min","name","onChange","value","Fragment","type","InputRange","step","InputText","useInputChange","initial","inputs","setInput","handleInputChange","useCallback","event","currentTarget","App","className","parseInt","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.674899f4.chunk.js","sourcesContent":["import { useTheme } from 'emotion-theming'\n\nconst useThemeStyles = (styles) => styles(useTheme())\n\nexport default useThemeStyles\n","export default (theme) => ({\n  outer: {\n    backgroundColor: theme.colors.margin,\n  },\n  inner: {\n    alignItems: 'center',\n    backgroundColor: theme.colors.padding,\n    border: `0 solid ${theme.colors.border}`,\n    display: 'flex'\n  },\n  content: {\n    backgroundColor: '#80ccff'\n  },\n\n  height: {\n    display: 'flex',\n    alignItems: 'center',\n    marginLeft: '8px',\n    position: 'relative',\n    zIndex: 2,\n    borderLeft: '1px solid #666',\n    paddingLeft: '4px',\n\n    '&::before': {\n      background: '#666',\n      display: 'block',\n      content: '\"\"',\n      position: 'absolute',\n      top: 0,\n      height: '1px',\n      width: '7px',\n      left: '-4px'\n    },\n\n    '&::after': {\n      background: '#666',\n      display: 'block',\n      content: '\"\"',\n      position: 'absolute',\n      bottom: 0,\n      height: '1px',\n      width: '7px',\n      left: '-4px'\n    }\n  },\n\n  width: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginTop: '8px',\n    position: 'relative',\n    zIndex: 2,\n    borderTop: '1px solid #666',\n    paddingTop: '4px',\n\n    '&::before': {\n      background: '#666',\n      display: 'block',\n      content: '\"\"',\n      position: 'absolute',\n      left: 0,\n      width: '1px',\n      height: '7px',\n      top: '-4px'\n    },\n\n    '&::after': {\n      background: '#666',\n      display: 'block',\n      content: '\"\"',\n      position: 'absolute',\n      right: 0,\n      width: '1px',\n      height: '7px',\n      top: '-4px'\n    }\n  }\n})\n","import React, { useEffect, useRef, useState } from 'react'\nimport PropTypes from 'prop-types'\n\n/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport css from '@emotion/css/macro'\n\nimport useThemeStyles from '../../useThemeStyles'\n\nimport baseStyles from './styles'\n\nfunction Box({\n  borderTop,\n  borderRight,\n  borderBottom,\n  borderLeft,\n\n  marginTop,\n  marginRight,\n  marginBottom,\n  marginLeft,\n\n  paddingTop,\n  paddingRight,\n  paddingBottom,\n  paddingLeft,\n\n  minHeight,\n  height,\n  maxHeight,\n\n  minWidth,\n  width,\n  maxWidth,\n\n  fontSize,\n  lineHeight,\n\n  text\n}) {\n\n  const styles = useThemeStyles(baseStyles)\n\n  const BoxRef = useRef(null)\n\n  const [offsetHeight, setOffsetHeight] = useState(null)\n\n  useEffect(() => {\n    if (BoxRef) {\n      setOffsetHeight(BoxRef.current.offsetHeight)\n    }\n  }, [\n    borderTop,\n    borderBottom,\n    paddingTop,\n    paddingBottom,\n    lineHeight,\n    minHeight,\n    height,\n    maxHeight,\n    text,\n    setOffsetHeight\n  ])\n\n  const [offsetWidth, setOffsetWidth] = useState(null)\n\n  useEffect(() => {\n    if (BoxRef) {\n      setOffsetWidth(BoxRef.current.offsetWidth)\n    }\n  }, [\n    borderLeft,\n    borderRight,\n    paddingLeft,\n    paddingRight,\n    minWidth,\n    width,\n    maxWidth,\n    text,\n    setOffsetWidth\n  ])\n\n  const inlineStylesInner = {\n    ...borderTop && { borderTopWidth: borderTop },\n    ...borderRight && { borderRightWidth: borderRight },\n    ...borderBottom && { borderBottomWidth: borderBottom },\n    ...borderLeft && { borderLeftWidth: borderLeft },\n    \n    ...marginTop && { marginTop },\n    ...marginRight && { marginRight },\n    ...marginBottom && { marginBottom },\n    ...marginLeft && { marginLeft },\n\n    ...paddingTop && { paddingTop },\n    ...paddingRight && { paddingRight },\n    ...paddingBottom && { paddingBottom },\n    ...paddingLeft && { paddingLeft },\n\n    ...minHeight && { minHeight },\n    ...height && { height },\n    ...maxHeight && { maxHeight },\n\n    ...minWidth && { minWidth },\n    ...width && { width },\n    ...maxWidth && { maxWidth },\n  }\n\n  const HeightNode = (\n    <div\n      css={styles.height}\n      style={{\n        ...marginBottom && { marginBottom },\n        ...marginTop && { marginTop }\n      }}\n    >\n      <span>{`${offsetHeight}px`}</span>\n    </div>\n  )\n\n  const WidthNode = (\n    <div\n      css={styles.width}\n      style={{\n        ...marginLeft && { marginLeft },\n        ...marginRight && { marginRight },\n        ...offsetHeight && { width: offsetWidth }\n      }}\n    >\n      <span>{`${offsetWidth}px`}</span>\n    </div>\n  )\n\n  return (\n    <div>\n      <div style={{ display: 'flex', flexDirection: 'row' }}>\n        <div css={styles.outer}>\n          <div\n            ref={BoxRef}\n            css={styles.inner}\n            style={inlineStylesInner}\n          >\n            <div\n              css={styles.content}\n              style={{\n              fontSize: `${fontSize}px`,\n              lineHeight: `${lineHeight}px`\n            }}\n            >\n              {text}\n            </div>\n          </div>\n        </div>\n        {HeightNode}\n      </div>\n      {WidthNode}\n    </div>\n  )\n}\n\nBox.propTypes = {\n  borderTop: PropTypes.number,\n  borderRight: PropTypes.number,\n  borderBottom: PropTypes.number,\n  borderLeft: PropTypes.number,\n\n  marginTop: PropTypes.number,\n  marginRight: PropTypes.number,\n  marginBottom: PropTypes.number,\n  marginLeft: PropTypes.number,\n\n  paddingTop: PropTypes.number,\n  paddingRight: PropTypes.number,\n  paddingBottom: PropTypes.number,\n  paddingLeft: PropTypes.number,\n\n  minHeight: PropTypes.number,\n  height: PropTypes.number,\n  maxHeight: PropTypes.number,\n\n  minWidth: PropTypes.number,\n  width: PropTypes.number,\n  maxWidth: PropTypes.number,\n\n  fontSize: PropTypes.number,\n  lineHeight: PropTypes.number,\n\n  text: PropTypes.string\n}\n\nBox.defaultProps = {\n  borderTop: 0,\n  borderRight: 0,\n  borderBottom: 0,\n  borderLeft: 0,\n\n  marginTop: 0,\n  marginRight: 0,\n  marginBottom: 0,\n  marginLeft: 0,\n\n  paddingTop: 0,\n  paddingRight: 0,\n  paddingBottom: 0,\n  paddingLeft: 0,\n\n  minHeight: 0,\n  height: null,\n  maxHeight: null,\n\n  minWidth: 0,\n  width: null,\n  maxWidth: null,\n\n  fontSize: null,\n  lineHeight: null,\n\n  text: null\n}\n\nexport default Box\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport css from '@emotion/css/macro'\n\nimport styles from './styles'\n\nfunction Checkbox({\n  checked,\n  label,\n  name,\n  onChange,\n  value\n}) {\n\n  return (\n    <React.Fragment>\n      <input\n        checked={checked}\n        name={name}\n        onChange={onChange}\n        type=\"checkbox\"\n        value={value}\n      />\n      <label>{label}</label>\n    </React.Fragment>\n  )\n}\n\nCheckbox.propTypes = {\n  checked: PropTypes.bool,\n  label: PropTypes.string,\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n  value: PropTypes.string\n}\n\nexport default Checkbox\n","export default {\n  fieldset: {\n    border: '1px solid #cccccc',\n    margin: 0\n  },\n  grid: {\n    alignItems: 'center',\n    display: 'grid',\n    gridTemplateColumns: 'auto 1fr',\n    gridGap: '0.3em 0.6em',\n    gridAutoFlow: 'dense'\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport css from '@emotion/css/macro'\n\nimport styles from './styles'\n\nfunction Fieldset({\n  children,\n  legend\n}) {\n\n  const LegendNode = legend && (\n    <legend>\n      {legend}\n    </legend>\n  )\n\n  return (\n    <fieldset css={styles.fieldset}>\n      {LegendNode}\n      <div css={styles.grid}>\n        {children}\n      </div>\n    </fieldset>\n  )\n}\n\nFieldset.propTypes = {\n  legend: PropTypes.string\n}\n\nexport default Fieldset\n","export default {\n  input: {\n    border: '1px solid #cccccc',\n    fontSize: 'inherit',\n    minWidth: 0,\n    padding: '4px 8px',\n    width: 'auto'\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport css from '@emotion/css/macro'\n\nimport styles from './styles'\n\nfunction InputNumber({\n  label,\n  max,\n  min,\n  name,\n  onChange,\n  value\n}) {\n\n  return (\n    <React.Fragment>\n      <label>{label}</label>\n      <input\n        css={styles.input}\n        max={max}\n        min={min}\n        name={name}\n        onChange={onChange}\n        type=\"number\"\n        value={value}\n      />\n    </React.Fragment>\n  )\n}\n\nInputNumber.propTypes = {\n  label: PropTypes.string,\n  max: PropTypes.number,\n  min: PropTypes.number,\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n  value: PropTypes.string\n}\n\nexport default InputNumber\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction InputRange({\n  label,\n  max,\n  min,\n  onChange,\n  step,\n  value\n}) {\n\n  return (\n    <>\n      <label>{label}</label>\n      <input\n        max={max}\n        min={min}\n        onChange={onChange}\n        step={step}\n        type=\"range\"\n        value={value}\n      />\n    </>\n  )\n}\n\nInputRange.propTypes = {\n  label: PropTypes.string,\n  max: PropTypes.number,\n  min: PropTypes.number,\n  onChange: PropTypes.func,\n  step: PropTypes.number,\n  value: PropTypes.number\n}\n\nInputRange.defaultProps = {\n  min: 0,\n  max: 100,\n  step: 1\n}\n\nexport default InputRange\n","export default {\n  input: {\n    border: '1px solid #cccccc',\n    fontSize: 'inherit',\n    minWidth: 0,\n    padding: '4px 8px',\n    width: 'auto'\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport css from '@emotion/css/macro'\n\nimport styles from './styles'\n\nfunction InputText({\n  label,\n  name,\n  onChange,\n  value\n}) {\n\n  return (\n    <React.Fragment>\n      <label>{label}</label>\n      <input\n        css={styles.input}\n        name={name}\n        onChange={onChange}\n        type=\"text\"\n        value={value}\n      />\n    </React.Fragment>\n  )\n}\n\nInputText.propTypes = {\n  label: PropTypes.string,\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n  value: PropTypes.string\n}\n\nexport default InputText\n","import { useState, useCallback } from 'react'\n\nexport const useInputChange = (initial = {}) => {\n  const [inputs, setInput] = useState(initial)\n\n  const handleInputChange = useCallback(\n    event => {\n      setInput({\n          ...inputs,\n          [event.currentTarget.name]: event.currentTarget.value\n        })\n    },\n    [inputs, setInput]\n  )\n\n  return [inputs, handleInputChange]\n}\n\nexport default useInputChange\n","import React from 'react'\nimport './App.css'\n\n/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport { ThemeProvider } from 'emotion-theming'\n\nimport { Box, Fieldset, InputNumber, InputText } from './Components'\nimport useInputChange from './useInputChange'\n\nconst theme = {\n  colors: {\n    margin: '#ffabab',\n    border: '#ffde8e',\n    padding: '#c9ff81',\n  }\n}\n\nfunction App() {\n\n  const initialState = {\n    marginTop: '8',\n    marginRight: '8',\n    marginBottom: '8',\n    marginLeft: '8',\n\n    borderTop: '12',\n    borderRight: '12',\n    borderBottom: '12',\n    borderLeft: '12',\n\n    paddingTop: '16',\n    paddingRight: '16',\n    paddingBottom: '16',\n    paddingLeft: '16',\n\n    minHeight: '0',\n    height: '',\n    maxHeight: '',\n\n    minWidth: '0',\n    width: '',\n    maxWidth: '',\n\n    fontSize: '16',\n    lineHeight: '24',\n\n    text: 'Hello world'\n  }\n\n  const [inputs, handleInputChange] = useInputChange(initialState)\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        <div className=\"controls\">\n\n          <Fieldset legend=\"Margin\">\n            <InputNumber\n              label=\"margin-top\"\n              min={0}\n              name=\"marginTop\"\n              onChange={handleInputChange}\n              value={inputs.marginTop}\n            />\n            <InputNumber\n              label=\"margin-right\"\n              min={0}\n              name=\"marginRight\"\n              onChange={handleInputChange}\n              value={inputs.marginRight}\n            />\n            <InputNumber\n              label=\"margin-bottom\"\n              min={0}\n              name=\"marginBottom\"\n              onChange={handleInputChange}\n              value={inputs.marginBottom}\n            />\n            <InputNumber\n              label=\"margin-left\"\n              min={0}\n              name=\"marginLeft\"\n              onChange={handleInputChange}\n              value={inputs.marginLeft}\n            />\n          </Fieldset>\n\n          <Fieldset legend=\"Border\">\n            <InputNumber\n              label=\"border-top\"\n              min={0}\n              name=\"borderTop\"\n              onChange={handleInputChange}\n              value={inputs.borderTop}\n            />\n            <InputNumber\n              label=\"border-right\"\n              min={0}\n              name=\"borderRight\"\n              onChange={handleInputChange}\n              value={inputs.borderRight}\n            />\n            <InputNumber\n              label=\"border-bottom\"\n              min={0}\n              name=\"borderBottom\"\n              onChange={handleInputChange}\n              value={inputs.borderBottom}\n            />\n            <InputNumber\n              label=\"border-left\"\n              min={0}\n              name=\"borderLeft\"\n              onChange={handleInputChange}\n              value={inputs.borderLeft}\n            />\n          </Fieldset>\n\n          <Fieldset legend=\"Padding\">\n            <InputNumber\n              label=\"padding-top\"\n              min={0}\n              name=\"paddingTop\"\n              onChange={handleInputChange}\n              value={inputs.paddingTop}\n            />\n            <InputNumber\n              label=\"padding-right\"\n              min={0}\n              name=\"paddingRight\"\n              onChange={handleInputChange}\n              value={inputs.paddingRight}\n            />\n            <InputNumber\n              label=\"padding-bottom\"\n              min={0}\n              name=\"paddingBottom\"\n              onChange={handleInputChange}\n              value={inputs.paddingBottom}\n            />\n            <InputNumber\n              label=\"padding-left\"\n              min={0}\n              name=\"paddingLeft\"\n              onChange={handleInputChange}\n              value={inputs.paddingLeft}\n            />\n          </Fieldset>\n\n          <Fieldset legend=\"Height\">\n            <InputNumber\n              label=\"min-height\"\n              min={0}\n              name=\"minHeight\"\n              onChange={handleInputChange}\n              value={inputs.minHeight}\n            />\n            <InputNumber\n              label=\"height\"\n              min={0}\n              name=\"height\"\n              onChange={handleInputChange}\n              value={inputs.height}\n            />\n            <InputNumber\n              label=\"max-height\"\n              min={0}\n              name=\"maxHeight\"\n              onChange={handleInputChange}\n              value={inputs.maxHeight}\n            />\n          </Fieldset>\n\n          <Fieldset legend=\"Width\">\n            <InputNumber\n              label=\"min-width\"\n              min={0}\n              name=\"minWidth\"\n              onChange={handleInputChange}\n              value={inputs.minWidth}\n            />\n            <InputNumber\n              label=\"width\"\n              min={0}\n              name=\"width\"\n              onChange={handleInputChange}\n              value={inputs.width}\n            />\n            <InputNumber\n              label=\"max-width\"\n              min={0}\n              name=\"maxWidth\"\n              onChange={handleInputChange}\n              value={inputs.maxWidth}\n            />\n          </Fieldset>\n          <Fieldset legend=\"Font\">\n            <InputNumber\n              label=\"font-size\"\n              min={0}\n              name=\"fontSize\"\n              onChange={handleInputChange}\n              value={inputs.fontSize}\n            />\n            <InputNumber\n              label=\"line-height\"\n              min={0}\n              name=\"lineHeight\"\n              onChange={handleInputChange}\n              value={inputs.lineHeight}\n            />\n            <InputText\n              label=\"text\"\n              name=\"text\"\n              onChange={handleInputChange}\n              value={inputs.text}\n            />\n          </Fieldset>\n        </div>\n        <div className=\"output\">\n          <div className=\"box-wrap\">\n            <Box\n              borderTop={parseInt(inputs.borderTop)}\n              borderRight={parseInt(inputs.borderRight)}\n              borderBottom={parseInt(inputs.borderBottom)}\n              borderLeft={parseInt(inputs.borderLeft)}\n\n              marginTop={parseInt(inputs.marginTop)}\n              marginRight={parseInt(inputs.marginRight)}\n              marginBottom={parseInt(inputs.marginBottom)}\n              marginLeft={parseInt(inputs.marginLeft)}\n\n              paddingTop={parseInt(inputs.paddingTop)}\n              paddingRight={parseInt(inputs.paddingRight)}\n              paddingBottom={parseInt(inputs.paddingBottom)}\n              paddingLeft={parseInt(inputs.paddingLeft)}\n\n              minHeight={parseInt(inputs.minHeight)}\n              height={parseInt(inputs.height)}\n              maxHeight={parseInt(inputs.maxHeight)}\n\n              minWidth={parseInt(inputs.minWidth)}\n              width={parseInt(inputs.width)}\n              maxWidth={parseInt(inputs.maxWidth)}\n\n              fontSize={parseInt(inputs.fontSize)}\n              lineHeight={parseInt(inputs.lineHeight)}\n\n              text={inputs.text}\n            />\n          </div>\n        </div>\n      </div>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}