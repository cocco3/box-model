{"version":3,"sources":["hooks/useInputChange.js","hooks/useCreateId.js","hooks/useThemeStyles.js","components/Box/styles.js","components/Box/Box.js","components/Checkbox/Checkbox.js","components/Fieldset/styles.js","components/Fieldset/Fieldset.js","components/InputNumber/styles.js","components/InputNumber/InputNumber.js","components/InputRange/InputRange.js","components/InputText/styles.js","components/InputText/InputText.js","App.js","serviceWorker.js","index.js"],"names":["useInputChange","initial","useState","inputs","setInput","handleInputChange","useCallback","event","currentTarget","name","value","useCreateId","useRef","shortid","generate","useThemeStyles","styles","useTheme","theme","outer","backgroundColor","colors","margin","inner","alignItems","padding","border","display","outline","cursor","content","height","marginLeft","position","zIndex","borderLeft","paddingLeft","width","background","top","left","bottom","flexDirection","marginTop","borderTop","paddingTop","right","Box","borderRight","borderBottom","marginRight","marginBottom","paddingRight","paddingBottom","minHeight","maxHeight","minWidth","maxWidth","fontSize","lineHeight","outlineOffset","text","baseStyles","BoxRef","offsetHeight","setOffsetHeight","useEffect","set","current","window","addEventListener","removeEventListener","offsetWidth","setOffsetWidth","inlineStylesInner","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","outlineWidth","HeightNode","css","style","WidthNode","ref","defaultProps","Checkbox","fieldset","grid","gridTemplateColumns","gridGap","gridAutoFlow","Fieldset","children","legend","LegendNode","input","appearance","borderRadius","InputNumber","label","max","min","onChange","id","Fragment","htmlFor","inputMode","type","InputRange","step","InputText","App","className","parseInt","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0cfe866f.chunk.js","sourcesContent":["import { useState, useCallback } from 'react'\n\nexport const useInputChange = (initial = {}) => {\n  const [inputs, setInput] = useState(initial)\n\n  const handleInputChange = useCallback(\n    event => {\n      setInput({\n          ...inputs,\n          [event.currentTarget.name]: event.currentTarget.value\n        })\n    },\n    [inputs, setInput]\n  )\n\n  return [inputs, handleInputChange]\n}\n\nexport default useInputChange\n","import { useRef } from 'react'\nimport shortid from 'shortid'\n\nconst useCreateId = () => useRef(`i${shortid.generate()}`)\n\nexport default useCreateId\n","import { useTheme } from 'emotion-theming'\n\nconst useThemeStyles = (styles) => styles(useTheme())\n\nexport default useThemeStyles\n","export default (theme) => ({\n  outer: {\n    backgroundColor: theme.colors.margin,\n  },\n  inner: {\n    alignItems: 'center',\n    backgroundColor: theme.colors.padding,\n    border: `0 solid ${theme.colors.border}`,\n    display: 'flex',\n    outline: `0 dashed ${theme.colors.outline}`,\n    cursor: 'pointer'\n  },\n  content: {\n    backgroundColor: '#80ccff'\n  },\n\n  height: {\n    display: 'flex',\n    alignItems: 'center',\n    marginLeft: '8px',\n    position: 'relative',\n    zIndex: 2,\n    borderLeft: '1px solid #666',\n    paddingLeft: '4px',\n    width: '60px',\n\n    '&::before': {\n      background: '#666',\n      display: 'block',\n      content: '\"\"',\n      position: 'absolute',\n      top: 0,\n      height: '1px',\n      width: '7px',\n      left: '-4px'\n    },\n\n    '&::after': {\n      background: '#666',\n      display: 'block',\n      content: '\"\"',\n      position: 'absolute',\n      bottom: 0,\n      height: '1px',\n      width: '7px',\n      left: '-4px'\n    }\n  },\n\n  width: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginTop: '8px',\n    position: 'relative',\n    zIndex: 2,\n    borderTop: '1px solid #666',\n    paddingTop: '4px',\n\n    '&::before': {\n      background: '#666',\n      display: 'block',\n      content: '\"\"',\n      position: 'absolute',\n      left: 0,\n      width: '1px',\n      height: '7px',\n      top: '-4px'\n    },\n\n    '&::after': {\n      background: '#666',\n      display: 'block',\n      content: '\"\"',\n      position: 'absolute',\n      right: 0,\n      width: '1px',\n      height: '7px',\n      top: '-4px'\n    }\n  }\n})\n","import React, { useEffect, useRef, useState } from 'react'\nimport PropTypes from 'prop-types'\n\n/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport css from '@emotion/css/macro'\n\nimport { useThemeStyles } from '../../hooks'\n\nimport baseStyles from './styles'\n\nfunction Box({\n  borderTop,\n  borderRight,\n  borderBottom,\n  borderLeft,\n\n  marginTop,\n  marginRight,\n  marginBottom,\n  marginLeft,\n\n  paddingTop,\n  paddingRight,\n  paddingBottom,\n  paddingLeft,\n\n  minHeight,\n  height,\n  maxHeight,\n\n  minWidth,\n  width,\n  maxWidth,\n\n  fontSize,\n  lineHeight,\n\n  outline,\n  outlineOffset,\n\n  text\n}) {\n\n  const styles = useThemeStyles(baseStyles)\n\n  const BoxRef = useRef(null)\n\n  const [offsetHeight, setOffsetHeight] = useState(null)\n\n  useEffect(() => {\n    function set() {\n      if (BoxRef) {\n        setOffsetHeight(BoxRef.current.offsetHeight)\n      }\n    }\n    set()\n    window.addEventListener('resize', set)\n    return () => window.removeEventListener('resize', set)\n  }, [\n    borderTop,\n    borderBottom,\n    paddingTop,\n    paddingBottom,\n    lineHeight,\n    minHeight,\n    height,\n    maxHeight,\n    text,\n    setOffsetHeight\n  ])\n\n  const [offsetWidth, setOffsetWidth] = useState(null)\n\n  useEffect(() => {\n    function set() {\n      if (BoxRef) {\n        setOffsetWidth(BoxRef.current.offsetWidth)\n      }\n    }\n    set()\n    window.addEventListener('resize', set)\n    return () => window.removeEventListener('resize', set)\n  }, [\n    borderLeft,\n    borderRight,\n    paddingLeft,\n    paddingRight,\n    minWidth,\n    width,\n    maxWidth,\n    text,\n    setOffsetWidth\n  ])\n\n  const inlineStylesInner = {\n    ...borderTop && { borderTopWidth: borderTop },\n    ...borderRight && { borderRightWidth: borderRight },\n    ...borderBottom && { borderBottomWidth: borderBottom },\n    ...borderLeft && { borderLeftWidth: borderLeft },\n    \n    ...marginTop && { marginTop },\n    ...marginRight && { marginRight },\n    ...marginBottom && { marginBottom },\n    ...marginLeft && { marginLeft },\n\n    ...paddingTop && { paddingTop },\n    ...paddingRight && { paddingRight },\n    ...paddingBottom && { paddingBottom },\n    ...paddingLeft && { paddingLeft },\n\n    ...minHeight && { minHeight },\n    ...height && { height },\n    ...maxHeight && { maxHeight },\n\n    ...minWidth && { minWidth },\n    ...width && { width },\n    ...maxWidth && { maxWidth },\n\n    ...outline && { outlineWidth: outline },\n    ...outlineOffset && { outlineOffset }\n  }\n\n  const HeightNode = (\n    <div\n      css={styles.height}\n      style={{\n        ...marginBottom && { marginBottom },\n        ...marginTop && { marginTop }\n      }}\n    >\n      <span>{`${offsetHeight}px`}</span>\n    </div>\n  )\n\n  const WidthNode = (\n    <div\n      css={styles.width}\n      style={{\n        ...marginLeft && { marginLeft },\n        ...marginRight && { marginRight },\n        ...offsetHeight && { width: offsetWidth }\n      }}\n    >\n      <span>{`${offsetWidth}px`}</span>\n    </div>\n  )\n\n  return (\n    <div>\n      <div style={{ display: 'flex', flexDirection: 'row' }}>\n        <div css={styles.outer}>\n          <div\n            ref={BoxRef}\n            css={styles.inner}\n            style={inlineStylesInner}\n          >\n            <div\n              css={styles.content}\n              style={{\n              fontSize: `${fontSize}px`,\n              lineHeight: `${lineHeight}px`\n            }}\n            >\n              {text}\n            </div>\n          </div>\n        </div>\n        {HeightNode}\n      </div>\n      {WidthNode}\n    </div>\n  )\n}\n\nBox.propTypes = {\n  borderTop: PropTypes.number,\n  borderRight: PropTypes.number,\n  borderBottom: PropTypes.number,\n  borderLeft: PropTypes.number,\n\n  marginTop: PropTypes.number,\n  marginRight: PropTypes.number,\n  marginBottom: PropTypes.number,\n  marginLeft: PropTypes.number,\n\n  paddingTop: PropTypes.number,\n  paddingRight: PropTypes.number,\n  paddingBottom: PropTypes.number,\n  paddingLeft: PropTypes.number,\n\n  minHeight: PropTypes.number,\n  height: PropTypes.number,\n  maxHeight: PropTypes.number,\n\n  minWidth: PropTypes.number,\n  width: PropTypes.number,\n  maxWidth: PropTypes.number,\n\n  fontSize: PropTypes.number,\n  lineHeight: PropTypes.number,\n\n  outline: PropTypes.number,\n  outlineOffset: PropTypes.number,\n\n  text: PropTypes.string\n}\n\nBox.defaultProps = {\n  borderTop: 0,\n  borderRight: 0,\n  borderBottom: 0,\n  borderLeft: 0,\n\n  marginTop: 0,\n  marginRight: 0,\n  marginBottom: 0,\n  marginLeft: 0,\n\n  paddingTop: 0,\n  paddingRight: 0,\n  paddingBottom: 0,\n  paddingLeft: 0,\n\n  minHeight: 0,\n  height: null,\n  maxHeight: null,\n\n  minWidth: 0,\n  width: null,\n  maxWidth: null,\n\n  fontSize: null,\n  lineHeight: null,\n\n  outline: null,\n  outlineOffset: null,\n\n  text: null\n}\n\nexport default Box\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport css from '@emotion/css/macro'\n\nimport styles from './styles'\n\nfunction Checkbox({\n  checked,\n  label,\n  name,\n  onChange,\n  value\n}) {\n\n  return (\n    <React.Fragment>\n      <input\n        checked={checked}\n        name={name}\n        onChange={onChange}\n        type=\"checkbox\"\n        value={value}\n      />\n      <label>{label}</label>\n    </React.Fragment>\n  )\n}\n\nCheckbox.propTypes = {\n  checked: PropTypes.bool,\n  label: PropTypes.string,\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n  value: PropTypes.string\n}\n\nexport default Checkbox\n","export default {\n  fieldset: {\n    border: '1px solid #cccccc',\n    margin: 0\n  },\n  grid: {\n    alignItems: 'center',\n    display: 'grid',\n    gridTemplateColumns: 'auto 1fr',\n    gridGap: '0.3em 0.6em',\n    gridAutoFlow: 'dense'\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport css from '@emotion/css/macro'\n\nimport styles from './styles'\n\nfunction Fieldset({\n  children,\n  legend\n}) {\n\n  const LegendNode = legend && (\n    <legend>\n      {legend}\n    </legend>\n  )\n\n  return (\n    <fieldset css={styles.fieldset}>\n      {LegendNode}\n      <div css={styles.grid}>\n        {children}\n      </div>\n    </fieldset>\n  )\n}\n\nFieldset.propTypes = {\n  legend: PropTypes.string\n}\n\nexport default Fieldset\n","export default {\n  input: {\n    appearance: 'none',\n    background: '#fff',\n    border: '1px solid #cccccc',\n    borderRadius: '2px',\n    fontSize: 'inherit',\n    minWidth: 0,\n    padding: '4px 8px',\n    width: 'auto',\n\n    '@media (hover: none)': {\n      fontSize: '16px'\n    }\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport css from '@emotion/css/macro'\n\nimport { useCreateId } from '../../hooks'\n\nimport styles from './styles'\n\nfunction InputNumber({\n  label,\n  max,\n  min,\n  name,\n  onChange,\n  value\n}) {\n  const id = useCreateId()\n\n  return (\n    <React.Fragment>\n      <label htmlFor={id.current}>{label}</label>\n      <input\n        css={styles.input}\n        id={id.current}\n        inputMode=\"numeric\"\n        max={max}\n        min={min}\n        name={name}\n        onChange={onChange}\n        type=\"number\"\n        value={value}\n      />\n    </React.Fragment>\n  )\n}\n\nInputNumber.propTypes = {\n  label: PropTypes.string,\n  max: PropTypes.number,\n  min: PropTypes.number,\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n  value: PropTypes.string\n}\n\nexport default InputNumber\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction InputRange({\n  label,\n  max,\n  min,\n  onChange,\n  step,\n  value\n}) {\n\n  return (\n    <>\n      <label>{label}</label>\n      <input\n        max={max}\n        min={min}\n        onChange={onChange}\n        step={step}\n        type=\"range\"\n        value={value}\n      />\n    </>\n  )\n}\n\nInputRange.propTypes = {\n  label: PropTypes.string,\n  max: PropTypes.number,\n  min: PropTypes.number,\n  onChange: PropTypes.func,\n  step: PropTypes.number,\n  value: PropTypes.number\n}\n\nInputRange.defaultProps = {\n  min: 0,\n  max: 100,\n  step: 1\n}\n\nexport default InputRange\n","export default {\n  input: {\n    appearance: 'none',\n    background: '#fff',\n    border: '1px solid #cccccc',\n    borderRadius: '2px',\n    fontSize: 'inherit',\n    minWidth: 0,\n    padding: '4px 8px',\n    width: 'auto',\n\n    '@media (hover: none)': {\n      fontSize: '16px'\n    }\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport css from '@emotion/css/macro'\n\nimport { useCreateId } from '../../hooks'\n\nimport styles from './styles'\n\nfunction InputText({\n  label,\n  name,\n  onChange,\n  value\n}) {\n  const id = useCreateId()\n\n  return (\n    <React.Fragment>\n      <label htmlFor={id.current}>{label}</label>\n      <input\n        css={styles.input}\n        id={id.current}\n        name={name}\n        onChange={onChange}\n        type=\"text\"\n        value={value}\n      />\n    </React.Fragment>\n  )\n}\n\nInputText.propTypes = {\n  label: PropTypes.string,\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n  value: PropTypes.string\n}\n\nexport default InputText\n","import React from 'react'\nimport './App.css'\n\n/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport { ThemeProvider } from 'emotion-theming'\n\nimport { Box, Fieldset, InputNumber, InputText } from './components'\nimport { useInputChange } from './hooks'\n\nconst theme = {\n  colors: {\n    outline: '#1a04d0',\n    margin: '#ffabab',\n    border: '#ffde8e',\n    padding: '#c9ff81',\n  }\n}\n\nfunction App() {\n\n  const initialState = {\n    marginTop: '8',\n    marginRight: '8',\n    marginBottom: '8',\n    marginLeft: '8',\n\n    borderTop: '12',\n    borderRight: '12',\n    borderBottom: '12',\n    borderLeft: '12',\n\n    paddingTop: '16',\n    paddingRight: '16',\n    paddingBottom: '16',\n    paddingLeft: '16',\n\n    minHeight: '0',\n    height: '',\n    maxHeight: '',\n\n    minWidth: '0',\n    width: '',\n    maxWidth: '',\n\n    fontSize: '16',\n    lineHeight: '24',\n\n    outline: '',\n    outlineOffset: '',\n\n    text: 'Hello world!'\n  }\n\n  const [inputs, handleInputChange] = useInputChange(initialState)\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        <div className=\"box\">\n          <Box\n            borderTop={parseInt(inputs.borderTop)}\n            borderRight={parseInt(inputs.borderRight)}\n            borderBottom={parseInt(inputs.borderBottom)}\n            borderLeft={parseInt(inputs.borderLeft)}\n\n            marginTop={parseInt(inputs.marginTop)}\n            marginRight={parseInt(inputs.marginRight)}\n            marginBottom={parseInt(inputs.marginBottom)}\n            marginLeft={parseInt(inputs.marginLeft)}\n\n            paddingTop={parseInt(inputs.paddingTop)}\n            paddingRight={parseInt(inputs.paddingRight)}\n            paddingBottom={parseInt(inputs.paddingBottom)}\n            paddingLeft={parseInt(inputs.paddingLeft)}\n\n            minHeight={parseInt(inputs.minHeight)}\n            height={parseInt(inputs.height)}\n            maxHeight={parseInt(inputs.maxHeight)}\n\n            minWidth={parseInt(inputs.minWidth)}\n            width={parseInt(inputs.width)}\n            maxWidth={parseInt(inputs.maxWidth)}\n\n            fontSize={parseInt(inputs.fontSize)}\n            lineHeight={parseInt(inputs.lineHeight)}\n\n            outline={parseInt(inputs.outline)}\n            outlineOffset={parseInt(inputs.outlineOffset)}\n\n            text={inputs.text}\n          />\n        </div>\n        \n        <div className=\"controls\">\n\n          <Fieldset legend=\"Margin\">\n            <InputNumber\n              label=\"margin-top\"\n              min={0}\n              name=\"marginTop\"\n              onChange={handleInputChange}\n              value={inputs.marginTop}\n            />\n            <InputNumber\n              label=\"margin-right\"\n              min={0}\n              name=\"marginRight\"\n              onChange={handleInputChange}\n              value={inputs.marginRight}\n            />\n            <InputNumber\n              label=\"margin-bottom\"\n              min={0}\n              name=\"marginBottom\"\n              onChange={handleInputChange}\n              value={inputs.marginBottom}\n            />\n            <InputNumber\n              label=\"margin-left\"\n              min={0}\n              name=\"marginLeft\"\n              onChange={handleInputChange}\n              value={inputs.marginLeft}\n            />\n          </Fieldset>\n\n          <Fieldset legend=\"Border\">\n            <InputNumber\n              label=\"border-top\"\n              min={0}\n              name=\"borderTop\"\n              onChange={handleInputChange}\n              value={inputs.borderTop}\n            />\n            <InputNumber\n              label=\"border-right\"\n              min={0}\n              name=\"borderRight\"\n              onChange={handleInputChange}\n              value={inputs.borderRight}\n            />\n            <InputNumber\n              label=\"border-bottom\"\n              min={0}\n              name=\"borderBottom\"\n              onChange={handleInputChange}\n              value={inputs.borderBottom}\n            />\n            <InputNumber\n              label=\"border-left\"\n              min={0}\n              name=\"borderLeft\"\n              onChange={handleInputChange}\n              value={inputs.borderLeft}\n            />\n          </Fieldset>\n\n          <Fieldset legend=\"Padding\">\n            <InputNumber\n              label=\"padding-top\"\n              min={0}\n              name=\"paddingTop\"\n              onChange={handleInputChange}\n              value={inputs.paddingTop}\n            />\n            <InputNumber\n              label=\"padding-right\"\n              min={0}\n              name=\"paddingRight\"\n              onChange={handleInputChange}\n              value={inputs.paddingRight}\n            />\n            <InputNumber\n              label=\"padding-bottom\"\n              min={0}\n              name=\"paddingBottom\"\n              onChange={handleInputChange}\n              value={inputs.paddingBottom}\n            />\n            <InputNumber\n              label=\"padding-left\"\n              min={0}\n              name=\"paddingLeft\"\n              onChange={handleInputChange}\n              value={inputs.paddingLeft}\n            />\n          </Fieldset>\n\n          <Fieldset legend=\"Height\">\n            <InputNumber\n              label=\"min-height\"\n              min={0}\n              name=\"minHeight\"\n              onChange={handleInputChange}\n              value={inputs.minHeight}\n            />\n            <InputNumber\n              label=\"height\"\n              min={0}\n              name=\"height\"\n              onChange={handleInputChange}\n              value={inputs.height}\n            />\n            <InputNumber\n              label=\"max-height\"\n              min={0}\n              name=\"maxHeight\"\n              onChange={handleInputChange}\n              value={inputs.maxHeight}\n            />\n          </Fieldset>\n\n          <Fieldset legend=\"Width\">\n            <InputNumber\n              label=\"min-width\"\n              min={0}\n              name=\"minWidth\"\n              onChange={handleInputChange}\n              value={inputs.minWidth}\n            />\n            <InputNumber\n              label=\"width\"\n              min={0}\n              name=\"width\"\n              onChange={handleInputChange}\n              value={inputs.width}\n            />\n            <InputNumber\n              label=\"max-width\"\n              min={0}\n              name=\"maxWidth\"\n              onChange={handleInputChange}\n              value={inputs.maxWidth}\n            />\n          </Fieldset>\n          <Fieldset legend=\"Font\">\n            <InputNumber\n              label=\"font-size\"\n              min={0}\n              name=\"fontSize\"\n              onChange={handleInputChange}\n              value={inputs.fontSize}\n            />\n            <InputNumber\n              label=\"line-height\"\n              min={0}\n              name=\"lineHeight\"\n              onChange={handleInputChange}\n              value={inputs.lineHeight}\n            />\n            <InputText\n              label=\"text\"\n              name=\"text\"\n              onChange={handleInputChange}\n              value={inputs.text}\n            />\n          </Fieldset>\n          <Fieldset legend=\"Outline\">\n            <InputNumber\n              label=\"outline\"\n              min={0}\n              name=\"outline\"\n              onChange={handleInputChange}\n              value={inputs.outline}\n            />\n            <InputNumber\n              label=\"outline-offset\"\n              name=\"outlineOffset\"\n              onChange={handleInputChange}\n              value={inputs.outlineOffset}\n            />\n          </Fieldset>\n        </div>\n\n      </div>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}