{"version":3,"sources":["Components/Box/styles.js","Components/Box/Box.js","Components/Checkbox/Checkbox.js","Components/Fieldset/styles.js","Components/Fieldset/Fieldset.js","Components/InputNumber/styles.js","Components/InputNumber/InputNumber.js","Components/InputRange/InputRange.js","Components/InputText/InputText.js","useInputChange.js","App.js","serviceWorker.js","index.js"],"names":["outer","backgroundColor","inner","border","content","height","display","alignItems","marginLeft","position","zIndex","borderLeft","paddingLeft","span","background","top","width","left","bottom","Box","borderTop","borderRight","borderBottom","marginTop","marginRight","marginBottom","paddingTop","paddingRight","paddingBottom","minHeight","text","BoxRef","useRef","useState","offsetHeight","setOffsetHeight","useEffect","current","inlineStylesOuter","padding","inlineStylesInner","borderWidth","HeightNode","css","styles","style","flexDirection","ref","defaultProps","Checkbox","fieldset","margin","grid","gridTemplateColumns","gridGap","gridAutoFlow","Fieldset","children","legend","LegendNode","input","fontSize","minWidth","InputNumber","label","max","min","name","onChange","value","Fragment","type","InputRange","step","InputText","useInputChange","initial","inputs","setInput","handleInputChange","useCallback","event","currentTarget","App","className","parseInt","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uOAAe,GACbA,MAAO,CACLC,gBAAiB,WAEnBC,MAAO,CACLD,gBAAiB,UACjBE,OAAQ,mBAEVC,QAAS,CACPH,gBAAiB,WAEnBI,OAAQ,CACNC,QAAS,OACTC,WAAY,SACZC,WAAY,MACZC,SAAU,WACVC,OAAQ,EACRC,WAAY,iBACZC,YAAa,MAEbC,KAAM,CACJC,WAAY,QACZJ,OAAQ,GAGV,YAAa,CACXI,WAAY,OACZR,QAAS,QACTF,QAAS,KACTK,SAAU,WACVM,IAAK,EACLV,OAAQ,MACRW,MAAO,MACPC,KAAM,QAGR,WAAY,CACVH,WAAY,OACZR,QAAS,QACTF,QAAS,KACTK,SAAU,WACVS,OAAQ,EACRb,OAAQ,MACRW,MAAO,MACPC,KAAM,UCnCZ,SAASE,EAAT,GAoBI,IAnBFC,EAmBC,EAnBDA,UACAC,EAkBC,EAlBDA,YACAC,EAiBC,EAjBDA,aACAX,EAgBC,EAhBDA,WAEAY,EAcC,EAdDA,UACAC,EAaC,EAbDA,YACAC,EAYC,EAZDA,aACAjB,EAWC,EAXDA,WAEAkB,EASC,EATDA,WACAC,EAQC,EARDA,aACAC,EAOC,EAPDA,cACAhB,EAMC,EANDA,YAEAiB,EAIC,EAJDA,UACAxB,EAGC,EAHDA,OAEAyB,EACC,EADDA,KAGMC,EAASC,iBAAO,MAFrB,EAGuCC,mBAAS,MAHhD,mBAGMC,EAHN,KAGoBC,EAHpB,KAKDC,qBAAU,WACJL,GACFI,EAAgBJ,EAAOM,QAAQH,gBAEhC,CACDd,EACAE,EACAI,EACAE,EACAC,EACAxB,EACA8B,IAGF,IAAMG,EAAoB,CACxBC,QAAQ,GAAD,OAAKhB,EAAL,cAAoBC,EAApB,cAAqCC,EAArC,cAAuDjB,EAAvD,OAGHgC,EAAiB,yBACrBC,YAAY,GAAD,OAAKrB,EAAL,cAAoBC,EAApB,cAAqCC,EAArC,cAAuDX,EAAvD,OACRN,GAAU,CAAEA,OAAO,GAAD,OAAKA,EAAL,QAFA,IAGrBwB,UAAU,GAAD,OAAKA,EAAL,MACTU,QAAQ,GAAD,OAAKb,EAAL,cAAqBC,EAArB,cAAuCC,EAAvC,cAA0DhB,EAA1D,QAGH8B,EACJ,mBACEC,IAAKC,EAAOvC,OACZwC,MAAO,CACLpB,aAAcA,EACdF,UAAWA,IAGb,kCAAUW,EAAV,QAIJ,OACE,mBAAKW,MAAO,CAAEvC,QAAS,OAAQwC,cAAe,MAAOrC,SAAU,aAC7D,mBACEkC,IAAKC,EAAO5C,MACZ6C,MAAOP,GAEP,mBACES,IAAKhB,EACLY,IAAKC,EAAO1C,MACZ2C,MAAOL,GAEP,mBAAKG,IAAKC,EAAOxC,SACd0B,KAINY,GA2BPvB,EAAI6B,aAAe,CACjB5B,UAAW,EACXC,YAAa,EACbC,aAAc,EACdX,WAAY,EAEZY,UAAW,EACXC,YAAa,EACbC,aAAc,EACdjB,WAAY,EAEZkB,WAAY,EACZC,aAAc,EACdC,cAAe,EACfhB,YAAa,EAEbiB,UAAW,EACXxB,OAAQ,KAERyB,KAAM,eAGOX,QCjGA8B,ICvCA,GACbC,SAAU,CACR/C,OAAQ,oBACRgD,OAAQ,GAEVC,KAAM,CACJ7C,WAAY,SACZD,QAAS,OACT+C,oBAAqB,WACrBC,QAAS,cACTC,aAAc,UCwBHC,MAzBf,YAGI,IAFFC,EAEC,EAFDA,SACAC,EACC,EADDA,OAGMC,EAAaD,GACjB,0BACGA,GAIL,OACE,wBAAUf,IAAKC,EAAOM,UACnBS,EACD,mBAAKhB,IAAKC,EAAOQ,MACdK,KCxBM,GACbG,MAAO,CACLzD,OAAQ,oBACR0D,SAAU,UACVC,SAAU,EACVvB,QAAS,UACTvB,MAAO,SCqCI+C,MAlCf,YAOI,IANFC,EAMC,EANDA,MACAC,EAKC,EALDA,IACAC,EAIC,EAJDA,IACAC,EAGC,EAHDA,KACAC,EAEC,EAFDA,SACAC,EACC,EADDA,MAGA,OACE,YAAC,IAAMC,SAAP,KACE,yBAAQN,GACR,qBACErB,IAAKC,EAAOgB,MACZK,IAAKA,EACLC,IAAKA,EACLC,KAAMA,EACNC,SAAUA,EACVG,KAAK,SACLF,MAAOA,MCzBf,SAASG,EAAT,GAOI,IANFR,EAMC,EANDA,MACAC,EAKC,EALDA,IACAC,EAIC,EAJDA,IACAE,EAGC,EAHDA,SACAK,EAEC,EAFDA,KACAJ,EACC,EADDA,MAGA,OACE,oCACE,+BAAQL,GACR,2BACEC,IAAKA,EACLC,IAAKA,EACLE,SAAUA,EACVK,KAAMA,EACNF,KAAK,QACLF,MAAOA,KAefG,EAAWxB,aAAe,CACxBkB,IAAK,EACLD,IAAK,IACLQ,KAAM,GCjCOC,I,OCYAC,EAhBe,WAAmB,IAAlBC,EAAiB,uDAAP,GAAO,EACnB3C,mBAAS2C,GADU,mBACvCC,EADuC,KAC/BC,EAD+B,KAGxCC,EAAoBC,uBACxB,SAAAC,GACEH,EAAS,2BACFD,GADC,kBAEHI,EAAMC,cAAcf,KAAOc,EAAMC,cAAcb,WAGtD,CAACQ,EAAQC,IAGX,MAAO,CAACD,EAAQE,IC0JHI,MAnKf,WAEE,IAFa,EAsBuBR,EApBf,CACnBvD,UAAW,IACXC,YAAa,IACbC,aAAc,IACdX,WAAY,IAEZY,UAAW,IACXC,YAAa,IACbC,aAAc,IACdjB,WAAY,IAEZkB,WAAY,IACZC,aAAc,IACdC,cAAe,IACfhB,YAAa,IAEbiB,UAAW,IACXxB,OAAQ,OAnBG,mBAsBNwE,EAtBM,KAsBEE,EAtBF,KAwBb,OACE,yBAAKK,UAAU,OACb,yBAAKA,UAAU,YAEb,kBAAC,EAAD,CAAU1B,OAAO,UACf,kBAAC,EAAD,CACEM,MAAM,aACNE,IAAK,EACLC,KAAK,YACLC,SAAUW,EACVV,MAAOQ,EAAOtD,YAEhB,kBAAC,EAAD,CACEyC,MAAM,eACNE,IAAK,EACLC,KAAK,cACLC,SAAUW,EACVV,MAAOQ,EAAOrD,cAEhB,kBAAC,EAAD,CACEwC,MAAM,gBACNE,IAAK,EACLC,KAAK,eACLC,SAAUW,EACVV,MAAOQ,EAAOpD,eAEhB,kBAAC,EAAD,CACEuC,MAAM,cACNE,IAAK,EACLC,KAAK,aACLC,SAAUW,EACVV,MAAOQ,EAAOrE,cAIlB,kBAAC,EAAD,CAAUkD,OAAO,UACf,kBAAC,EAAD,CACEM,MAAM,aACNE,IAAK,EACLC,KAAK,YACLC,SAAUW,EACVV,MAAOQ,EAAOzD,YAEhB,kBAAC,EAAD,CACE4C,MAAM,eACNE,IAAK,EACLC,KAAK,cACLC,SAAUW,EACVV,MAAOQ,EAAOxD,cAEhB,kBAAC,EAAD,CACE2C,MAAM,gBACNE,IAAK,EACLC,KAAK,eACLC,SAAUW,EACVV,MAAOQ,EAAOvD,eAEhB,kBAAC,EAAD,CACE0C,MAAM,cACNE,IAAK,EACLC,KAAK,aACLC,SAAUW,EACVV,MAAOQ,EAAOlE,cAIlB,kBAAC,EAAD,CAAU+C,OAAO,WACf,kBAAC,EAAD,CACEM,MAAM,cACNE,IAAK,EACLC,KAAK,aACLC,SAAUW,EACVV,MAAOQ,EAAOnD,aAEhB,kBAAC,EAAD,CACEsC,MAAM,gBACNE,IAAK,EACLC,KAAK,eACLC,SAAUW,EACVV,MAAOQ,EAAOlD,eAEhB,kBAAC,EAAD,CACEqC,MAAM,iBACNE,IAAK,EACLC,KAAK,gBACLC,SAAUW,EACVV,MAAOQ,EAAOjD,gBAEhB,kBAAC,EAAD,CACEoC,MAAM,eACNE,IAAK,EACLC,KAAK,cACLC,SAAUW,EACVV,MAAOQ,EAAOjE,eAIlB,kBAAC,EAAD,CAAU8C,OAAO,WACf,kBAAC,EAAD,CACEM,MAAM,aACNE,IAAK,EACLC,KAAK,YACLC,SAAUW,EACVV,MAAOQ,EAAOhD,YAEhB,kBAAC,EAAD,CACEmC,MAAM,SACNE,IAAK,EACLC,KAAK,SACLC,SAAUW,EACVV,MAAOQ,EAAOxE,WAIpB,yBAAK+E,UAAU,UACb,kBAAC,EAAD,CACEhE,UAAWiE,SAASR,EAAOzD,WAC3BC,YAAagE,SAASR,EAAOxD,aAC7BC,aAAc+D,SAASR,EAAOvD,cAC9BX,WAAY0E,SAASR,EAAOlE,YAE5BY,UAAW8D,SAASR,EAAOtD,WAC3BC,YAAa6D,SAASR,EAAOrD,aAC7BC,aAAc4D,SAASR,EAAOpD,cAC9BjB,WAAY6E,SAASR,EAAOrE,YAE5BkB,WAAY2D,SAASR,EAAOnD,YAC5BC,aAAc0D,SAASR,EAAOlD,cAC9BC,cAAeyD,SAASR,EAAOjD,eAC/BhB,YAAayE,SAASR,EAAOjE,aAE7BiB,UAAWwD,SAASR,EAAOhD,WAC3BxB,OAAQgF,SAASR,EAAOxE,aCtJdiF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.aaadd0db.chunk.js","sourcesContent":["export default {\n  outer: {\n    backgroundColor: '#ffabab',\n  },\n  inner: {\n    backgroundColor: '#c9ff81',\n    border: '0 solid #ffde8e'\n  },\n  content: {\n    backgroundColor: '#80ccff'\n  },\n  height: {\n    display: 'flex',\n    alignItems: 'center',\n    marginLeft: '8px',\n    position: 'relative',\n    zIndex: 2,\n    borderLeft: '1px solid #666',\n    paddingLeft: '4px',\n\n    span: {\n      background: 'white',\n      zIndex: 3\n    },\n\n    '&::before': {\n      background: '#666',\n      display: 'block',\n      content: '\"\"',\n      position: 'absolute',\n      top: 0,\n      height: '1px',\n      width: '7px',\n      left: '-4px'\n    },\n\n    '&::after': {\n      background: '#666',\n      display: 'block',\n      content: '\"\"',\n      position: 'absolute',\n      bottom: 0,\n      height: '1px',\n      width: '7px',\n      left: '-4px'\n    }\n  }\n}\n","import React, { useEffect, useRef, useState } from 'react'\nimport PropTypes from 'prop-types'\n\n/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport css from '@emotion/css/macro'\n\nimport styles from './styles'\n\nfunction Box({\n  borderTop,\n  borderRight,\n  borderBottom,\n  borderLeft,\n\n  marginTop,\n  marginRight,\n  marginBottom,\n  marginLeft,\n\n  paddingTop,\n  paddingRight,\n  paddingBottom,\n  paddingLeft,\n\n  minHeight,\n  height,\n\n  text\n}) {\n\n  const BoxRef = useRef(null)\n  const [offsetHeight, setOffsetHeight] = useState(null)\n\n  useEffect(() => {\n    if (BoxRef) {\n      setOffsetHeight(BoxRef.current.offsetHeight)\n    }\n  }, [\n    borderTop,\n    borderBottom,\n    paddingTop,\n    paddingBottom,\n    minHeight,\n    height,\n    setOffsetHeight\n  ])\n\n  const inlineStylesOuter = {\n    padding: `${marginTop}px ${marginRight}px ${marginBottom}px ${marginLeft}px`\n  }\n\n  const inlineStylesInner = {\n    borderWidth: `${borderTop}px ${borderRight}px ${borderBottom}px ${borderLeft}px`,\n    ...height && { height: `${height}px` },\n    minHeight: `${minHeight}px`,\n    padding: `${paddingTop}px ${paddingRight}px ${paddingBottom}px ${paddingLeft}px`\n  }\n\n  const HeightNode = (\n    <div\n      css={styles.height}\n      style={{\n        marginBottom: marginBottom,\n        marginTop: marginTop\n      }}\n    >\n      <span>{`${offsetHeight}px`}</span>\n    </div>\n  )\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'row', position: 'relative' }}>\n      <div\n        css={styles.outer}\n        style={inlineStylesOuter}\n      >\n        <div\n          ref={BoxRef}\n          css={styles.inner}\n          style={inlineStylesInner}\n        >\n          <div css={styles.content}>\n            {text}\n          </div>\n        </div>\n      </div>\n      {HeightNode}\n    </div>\n  )\n}\n\nBox.propTypes = {\n  borderTop: PropTypes.number,\n  borderRight: PropTypes.number,\n  borderBottom: PropTypes.number,\n  borderLeft: PropTypes.number,\n\n  marginTop: PropTypes.number,\n  marginRight: PropTypes.number,\n  marginBottom: PropTypes.number,\n  marginLeft: PropTypes.number,\n\n  paddingTop: PropTypes.number,\n  paddingRight: PropTypes.number,\n  paddingBottom: PropTypes.number,\n  paddingLeft: PropTypes.number,\n\n  minHeight: PropTypes.number,\n  height: PropTypes.number,\n\n  text: PropTypes.string\n}\n\nBox.defaultProps = {\n  borderTop: 0,\n  borderRight: 0,\n  borderBottom: 0,\n  borderLeft: 0,\n\n  marginTop: 0,\n  marginRight: 0,\n  marginBottom: 0,\n  marginLeft: 0,\n\n  paddingTop: 0,\n  paddingRight: 0,\n  paddingBottom: 0,\n  paddingLeft: 0,\n\n  minHeight: 0,\n  height: null,\n\n  text: 'Hello world'\n}\n\nexport default Box\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport css from '@emotion/css/macro'\n\nimport styles from './styles'\n\nfunction Checkbox({\n  checked,\n  label,\n  name,\n  onChange,\n  value\n}) {\n\n  return (\n    <React.Fragment>\n      <input\n        checked={checked}\n        name={name}\n        onChange={onChange}\n        type=\"checkbox\"\n        value={value}\n      />\n      <label>{label}</label>\n    </React.Fragment>\n  )\n}\n\nCheckbox.propTypes = {\n  checked: PropTypes.bool,\n  label: PropTypes.string,\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n  value: PropTypes.string\n}\n\nexport default Checkbox\n","export default {\n  fieldset: {\n    border: '1px solid #cccccc',\n    margin: 0\n  },\n  grid: {\n    alignItems: 'center',\n    display: 'grid',\n    gridTemplateColumns: 'auto 1fr',\n    gridGap: '0.3em 0.6em',\n    gridAutoFlow: 'dense'\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport css from '@emotion/css/macro'\n\nimport styles from './styles'\n\nfunction Fieldset({\n  children,\n  legend\n}) {\n\n  const LegendNode = legend && (\n    <legend>\n      {legend}\n    </legend>\n  )\n\n  return (\n    <fieldset css={styles.fieldset}>\n      {LegendNode}\n      <div css={styles.grid}>\n        {children}\n      </div>\n    </fieldset>\n  )\n}\n\nFieldset.propTypes = {\n  legend: PropTypes.string\n}\n\nexport default Fieldset\n","export default {\n  input: {\n    border: '1px solid #cccccc',\n    fontSize: 'inherit',\n    minWidth: 0,\n    padding: '4px 8px',\n    width: 'auto'\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n/** @jsx jsx */\nimport { jsx } from '@emotion/core'\nimport css from '@emotion/css/macro'\n\nimport styles from './styles'\n\nfunction InputNumber({\n  label,\n  max,\n  min,\n  name,\n  onChange,\n  value\n}) {\n\n  return (\n    <React.Fragment>\n      <label>{label}</label>\n      <input\n        css={styles.input}\n        max={max}\n        min={min}\n        name={name}\n        onChange={onChange}\n        type=\"number\"\n        value={value}\n      />\n    </React.Fragment>\n  )\n}\n\nInputNumber.propTypes = {\n  label: PropTypes.string,\n  max: PropTypes.number,\n  min: PropTypes.number,\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n  value: PropTypes.string\n}\n\nexport default InputNumber\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction InputRange({\n  label,\n  max,\n  min,\n  onChange,\n  step,\n  value\n}) {\n\n  return (\n    <>\n      <label>{label}</label>\n      <input\n        max={max}\n        min={min}\n        onChange={onChange}\n        step={step}\n        type=\"range\"\n        value={value}\n      />\n    </>\n  )\n}\n\nInputRange.propTypes = {\n  label: PropTypes.string,\n  max: PropTypes.number,\n  min: PropTypes.number,\n  onChange: PropTypes.func,\n  step: PropTypes.number,\n  value: PropTypes.number\n}\n\nInputRange.defaultProps = {\n  min: 0,\n  max: 100,\n  step: 1\n}\n\nexport default InputRange\n","import React from \"react\"\n\nfunction InputText() {\n\n}\n\nexport default InputText\n","import { useState, useCallback } from 'react'\n\nexport const useInputChange = (initial = {}) => {\n  const [inputs, setInput] = useState(initial)\n\n  const handleInputChange = useCallback(\n    event => {\n      setInput({\n          ...inputs,\n          [event.currentTarget.name]: event.currentTarget.value\n        })\n    },\n    [inputs, setInput]\n  )\n\n  return [inputs, handleInputChange]\n}\n\nexport default useInputChange\n","import React from 'react'\nimport './App.css'\n\nimport { Box, Fieldset, InputNumber } from './Components'\nimport useInputChange from './useInputChange'\n\nfunction App() {\n\n  const initialState = {\n    borderTop: '8',\n    borderRight: '8',\n    borderBottom: '8',\n    borderLeft: '8',\n\n    marginTop: '8',\n    marginRight: '8',\n    marginBottom: '8',\n    marginLeft: '8',\n\n    paddingTop: '8',\n    paddingRight: '8',\n    paddingBottom: '8',\n    paddingLeft: '8',\n\n    minHeight: '0',\n    height: null\n  }\n\n  const [inputs, handleInputChange] = useInputChange(initialState)\n\n  return (\n    <div className=\"App\">\n      <div className=\"controls\">\n\n        <Fieldset legend=\"Margin\">\n          <InputNumber\n            label=\"margin-top\"\n            min={0}\n            name=\"marginTop\"\n            onChange={handleInputChange}\n            value={inputs.marginTop}\n          />\n          <InputNumber\n            label=\"margin-right\"\n            min={0}\n            name=\"marginRight\"\n            onChange={handleInputChange}\n            value={inputs.marginRight}\n          />\n          <InputNumber\n            label=\"margin-bottom\"\n            min={0}\n            name=\"marginBottom\"\n            onChange={handleInputChange}\n            value={inputs.marginBottom}\n          />\n          <InputNumber\n            label=\"margin-left\"\n            min={0}\n            name=\"marginLeft\"\n            onChange={handleInputChange}\n            value={inputs.marginLeft}\n          />\n        </Fieldset>\n\n        <Fieldset legend=\"Border\">\n          <InputNumber\n            label=\"border-top\"\n            min={0}\n            name=\"borderTop\"\n            onChange={handleInputChange}\n            value={inputs.borderTop}\n          />\n          <InputNumber\n            label=\"border-right\"\n            min={0}\n            name=\"borderRight\"\n            onChange={handleInputChange}\n            value={inputs.borderRight}\n          />\n          <InputNumber\n            label=\"border-bottom\"\n            min={0}\n            name=\"borderBottom\"\n            onChange={handleInputChange}\n            value={inputs.borderBottom}\n          />\n          <InputNumber\n            label=\"border-left\"\n            min={0}\n            name=\"borderLeft\"\n            onChange={handleInputChange}\n            value={inputs.borderLeft}\n          />\n        </Fieldset>\n\n        <Fieldset legend=\"Padding\">\n          <InputNumber\n            label=\"padding-top\"\n            min={0}\n            name=\"paddingTop\"\n            onChange={handleInputChange}\n            value={inputs.paddingTop}\n          />\n          <InputNumber\n            label=\"padding-right\"\n            min={0}\n            name=\"paddingRight\"\n            onChange={handleInputChange}\n            value={inputs.paddingRight}\n          />\n          <InputNumber\n            label=\"padding-bottom\"\n            min={0}\n            name=\"paddingBottom\"\n            onChange={handleInputChange}\n            value={inputs.paddingBottom}\n          />\n          <InputNumber\n            label=\"padding-left\"\n            min={0}\n            name=\"paddingLeft\"\n            onChange={handleInputChange}\n            value={inputs.paddingLeft}\n          />\n        </Fieldset>\n\n        <Fieldset legend=\"Content\">\n          <InputNumber\n            label=\"min-height\"\n            min={0}\n            name=\"minHeight\"\n            onChange={handleInputChange}\n            value={inputs.minHeight}\n          />\n          <InputNumber\n            label=\"height\"\n            min={0}\n            name=\"height\"\n            onChange={handleInputChange}\n            value={inputs.height}\n          />\n        </Fieldset>\n      </div>\n      <div className=\"output\">\n        <Box\n          borderTop={parseInt(inputs.borderTop)}\n          borderRight={parseInt(inputs.borderRight)}\n          borderBottom={parseInt(inputs.borderBottom)}\n          borderLeft={parseInt(inputs.borderLeft)}\n\n          marginTop={parseInt(inputs.marginTop)}\n          marginRight={parseInt(inputs.marginRight)}\n          marginBottom={parseInt(inputs.marginBottom)}\n          marginLeft={parseInt(inputs.marginLeft)}\n\n          paddingTop={parseInt(inputs.paddingTop)}\n          paddingRight={parseInt(inputs.paddingRight)}\n          paddingBottom={parseInt(inputs.paddingBottom)}\n          paddingLeft={parseInt(inputs.paddingLeft)}\n\n          minHeight={parseInt(inputs.minHeight)}\n          height={parseInt(inputs.height)}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}